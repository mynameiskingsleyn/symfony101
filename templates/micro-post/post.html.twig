{% extends 'base.html.twig' %}
{% set initials = post.user.fullName|split(' ')  %}
{% set init_first = attribute(initials, 0)|first %}
{% set init_second = attribute(initials, 1)|first  %}
{% set isLiked = post.getLikedBy.contains(app.user) %}
{% block body %}
    {{ include('micro-post/raw-post.html.twig',{'post':post})}}
    <div class="pt-2">
      <button style="display: {% if not isLiked %}block{% else %}none{% endif %}"
      class="btn-sm btn-outline-primary" id="like"> Like
      <span class="badge badge-light" id="likes-like">{{ post.getLikedBy.count }} </span>
      </button>

      <button style="display: {% if isLiked %}block{% else %}none{% endif %}"
      class="btn-sm btn-outline-danger" id="unlike"> unLike
      <span class="badge badge-light" id="likes-unlike">{{ post.getLikedBy.count }} </span>
      </button>
    </div>
    <a href="{{ path('micro_post_user',{'username':post.user.username})}}">posts by</a> <b>{{ init_first }} {{ init_second }}</b>

{% endblock %}

{% block javascripts %}
{{ parent() }}
  <script>
    //alert('working');
    var likeButton = document.querySelector('#like');
    var unlikeButton = document.querySelector('#unlike');
    addOnClick(
      likeButton, unlikeButton, document.querySelector('#likes-unlike'),
      '{{ path('likes_like',{'id': post.id})}}'
    )
    addOnClick(
       unlikeButton,likeButton, document.querySelector('#likes-like'),
      '{{ path('likes_unlike',{'id': post.id})}}'
    )
    function switchButtons(button,oButton){
      button.disabled = false;
      button.style.display = 'none';
      oButton.style.display = 'block';
    }

    function addOnClick(button, oButton, likedCount, path){
      button.addEventListener('click',function(event){
      {% if not app.user %}
        return window.location.replace('{{ path('user_register')}}')
      {% endif %}
        button.disabled = true;
        fetch(path,{'credentials': 'include'})
          .then(function(resp){
              resp.json().then(function(json){
                likedCount.innerText = json.count;
                switchButtons(button,oButton);
              })
          }).catch(function(err){
            //switchButton(button,oButton);
            button.disabled = false;
            console.log('error liking post');
          });
          event.preventDefault();
      });
    }

    //alert(likeButton.firstChild.nodeValue)

  </script>
{% endblock %}
